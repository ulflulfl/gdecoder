# Analyze meta infos from the .gcode input file

import os


class FileMetaInfos:

    generator = ""
    generator_line = ""
    generator_flavor = ""

    fileName = ""
    fileSize = 0
    modifiedTime = ""
    longestLine = 0
    lineCount = 0

    def _decodeCommentLine(self, line):
        if "Generated with Cura_SteamEngine" in line:
            self.generator_line = line
            self.generator = "Cura"
            return

        if "FLAVOR:Marlin" in line:
            self.generator_flavor = "Marlin"
            return

        if "generated by Slic3r" in line:
            self.generator_line = line
            self.generator = "Slic3r"
            return

        if "generated by PrusaSlicer" in line:
            self.generator_line = line
            self.generator = "PrusaSlicer"
            return

    def _decodeLine(self, line):
        currentLen = len(line)
        strippedLine = line.strip()

        if strippedLine.startswith(";"):
            self._decodeCommentLine(strippedLine)
        else:
            if currentLen > self.longestLine and len(strippedLine) > 0:
                self.longestLine = currentLen

    def readMetaInfos(self, fileName):
        self.fileName = fileName

        file1 = open(fileName, 'r', encoding='utf-8')
        Lines = file1.readlines()

        self.fileSize = os.path.getsize(fileName)
        self.modifiedTime = os.path.getmtime(fileName)

        for line in Lines:
            self.lineCount += 1

            self._decodeLine(line)
